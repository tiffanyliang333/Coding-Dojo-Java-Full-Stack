package com.book.club.controllers;

import java.util.List;

import javax.servlet.http.HttpSession;
import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;

import com.book.club.models.Book;
import com.book.club.models.LoginUser;
import com.book.club.models.User;
import com.book.club.services.BookService;
import com.book.club.services.UserService;


@Controller
public class HomeController {

	@Autowired
	private UserService userServ;
	
	@Autowired
	private BookService bookServ;
	
	@GetMapping("/")
	public String index(Model model) {
		model.addAttribute("newUser", new User());
		model.addAttribute("newLogin", new LoginUser());
		return "index.jsp";
	}
	
	@PostMapping("/register")
	public String register(@Valid @ModelAttribute("newUser") User newUser, BindingResult result, Model model, HttpSession session) {
		User user = userServ.register(newUser, result);
		if (result.hasErrors()) {
			model.addAttribute("newLogin", new LoginUser());
			return "index.jsp";
		}
		session.setAttribute("userId", user.getId());
		return "redirect:/books";
	}
	
	@PostMapping("/login")
	public String login(@Valid @ModelAttribute("newLogin") LoginUser newLogin, BindingResult result, Model model, HttpSession session) {
		User logUser = userServ.login(newLogin, result);
		if (logUser==null) {
			model.addAttribute("newUser", new User());
			return "index.jsp";
		}
		session.setAttribute("userId", logUser.getId());
		return "redirect:/books";
	}
	
	@GetMapping("/books")
	public String home(HttpSession session, Model model) {
		if(session.getAttribute("userId") == null) {
			return "redirect:/";
		}
		
		Long userId = (Long)session.getAttribute("userId");
		List<Book> books = bookServ.all();
		model.addAttribute("books", books);
		model.addAttribute("user", userServ.findById(userId));
		return "home.jsp";
	}
	
	@GetMapping("/logout")
	public String logout(HttpSession session) {
		session.removeAttribute("userId");
		return "redirect:/";
	}
	
	@GetMapping("/books/new")
	public String newBook(@ModelAttribute("newBook") Book newBook, Model model, HttpSession session) {
		User user = userServ.findById((Long)session.getAttribute("userId"));
		model.addAttribute("user", user);
		return "new.jsp";
	}
	
	@PostMapping("/addBook")
	public String addBook(@Valid @ModelAttribute("newBook") Book newBook, BindingResult result, HttpSession session) {
		if (result.hasErrors()) {
			return "new.jsp";
		}
		Long userId = (Long)session.getAttribute(userId);
		loggedUser
//		newBook.setUser()
		newBook = bookServ.upload(newBook);
		return "redirect:/books";
	}
	
	@GetMapping("/books/{id}")
	public String show(@PathVariable("id") Long id, Model model, HttpSession session) {
		if(session.getAttribute("userId") == null) {
			return "redirect:/";
		}
//		Long userId = (Long)session.getAttribute(userId);
		Book book = bookServ.findById(id);
		model.addAttribute("book", book);
		model.addAttribute("user", userServ.findById((Long)session.getAttribute("userId")));
		return "show.jsp";
	}
	
//	@GetMapping("/books/edit/{id}")
//	public String edit(@PathVariable("id") Long id, Model model, HttpSession session) {
//		User user = userServ.findById((Long)session.getAttribute("userId"));
//		model.addAttribute("user", user);
//		model.addAttribute("book", bookServ.findById(id));
//		return "edit.jsp";
//		
//	}
	
	@GetMapping("/books/edit/{id}")
	public String edit(@PathVariable("id") Long id, Model model, HttpSession session) {
		User user = userServ.findById((Long)session.getAttribute("userId"));
		Book updateBook = bookServ.findById(id);
		model.addAttribute("user", user);
		model.addAttribute("book", updateBook);
		return "edit.jsp";
	}
	
	@PostMapping("/updateBook/{id}")
	public String update(@Valid @ModelAttribute("book") Book book, BindingResult result, @PathVariable("id") Long id, Model model) {
		if(result.hasErrors()) {
			model.addAttribute("book", bookServ.findById(id));
			return "edit.jsp";
		} else {
			book.setId(id);
			bookServ.update(book);
			return "redirect:/books";
		}
	}
	
//	@DeleteMapping("/books/delete/{id}")
//	public String destroy(@PathVariable("id") Long id) {
//		bookServ.deleteBook(id);
//		return "redirect:/books";
//	}
	
	@RequestMapping("/books/delete/{id}")
	public String destroy(@PathVariable("id") Long id) {
		Book book = bookServ.findById(id);
		bookServ.deleteBook(book);
		return "redirect:/books";
	}
	
	
}



